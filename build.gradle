plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.+'
	id "com.modrinth.minotaur" version "2.+"
}

//archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-" + project.mod_version
group = project.maven_group

repositories {
	maven { name="BuildCraft"; url="https://mod-buildcraft.com/maven" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://jitpack.io' }
	maven { url "https://kneelawk.com/maven/" }
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.pitan76.net/" }
	mavenLocal()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi "alexiil.mc.lib:libblockattributes-all:$libblockattributes_version"
	modApi "alexiil.mc.lib:libnetworkstack-base:$libnetworkstack_version"
	modApi "alexiil.mc.lib:libmultipart-base:$libmultipart_version"

	include "alexiil.mc.lib:libblockattributes-all:$libblockattributes_version"
	include "alexiil.mc.lib:libnetworkstack-base:$libnetworkstack_version"
	include "alexiil.mc.lib:libmultipart-base:$libmultipart_version"

	modImplementation "alexiil.mc.mod:simplepipes-all:0.5.0"

	modImplementation "net.pitan76:mcpitanlib-fabric${rootProject.mcpitanlib_version}"
	include "net.pitan76:mcpitanlib_checker-fabric:${rootProject.mcpitanlib_checker_version}"

	modImplementation "com.terraformersmc:modmenu:1.16.23"
}

processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

def targetJavaVersion = 8
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 8
	if (JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

curseforge {
	if (System.getenv("CURSEFORGE_TOKEN") != null) {
		apiKey = System.getenv("CURSEFORGE_TOKEN")
		project {
			id = '514438'
			changelog = "MCPitanLib version: " + mcpitanlib_version.split(":")[1]
			releaseType = 'release'
			addGameVersion '1.16.4'
			addGameVersion '1.16.5'
			addGameVersion "Fabric"
			relations {
				requiredDependency 'fabric-api'
				requiredDependency 'mcpitanlibarch'
				requiredDependency 'simplepipes'
			}

			mainArtifact(remapJar)
		}
		options {
			forgeGradleIntegration = false
		}
	}
}

import com.modrinth.minotaur.dependencies.ModDependency

modrinth {
	if (System.getenv("MODRINTH_TOKEN") != null) {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'zSS7GIKK'
		versionNumber = project.mod_version + "-" + project.minecraft_version
		uploadFile = remapJar
		gameVersions = ['1.16.4', '1.16.5']
		versionType = 'release'
		loaders = ['fabric']
		changelog = "MCPitanLib version: " + mcpitanlib_version.split(":")[1]
		dependencies = [
				new ModDependency('P7dR8mSH', 'required'), // Fabric API
				new ModDependency('uNRoUnGT', 'required'),  // MCPitanLibarch
				new ModDependency('ls90k6B8', 'required')  // Simple Pipes
		]
	}
}

task publishToModSites {
	publishToModSites.dependsOn modrinth
	publishToModSites.dependsOn curseforge
}